test_that("Checking for AQSDatamartAPI credentials keyring", {
"AQSDatamartAPI" %>%
   str_detect(keyring::key_list()$service) %>%
   any() %>%
   expect_true()
}

context("testing connection to AQS Datamart API")
test_that("Checking status of AQS Datmart API", {
import::here(.from = "magrittr", "%>%")
AQS_API_isAvailable()$status %>%
   str_detect("API service is up and running healthy") %>%
   expect_true
}

context("running AQS API calls to look for errors being returned")
test_that("checking that functions return proper data type", {
states <- AQS_API_states() %>% expect_s3_class(class="AQS_API")
isavailable <- AQS_API_isAvailable() expect_true
counties <- AQS_API_countiesByState(stateFIPS = "42") %>% expect_s3_class(class="AQS_API")
sites <- AQS_API_sitesByCounty(stateFIPS = "42", countycode = "101") %>% expect_s3_class(class="AQS_API")
cbsas <- AQS_API_cbsas() %>% expect_s3_class(class="AQS_API")
classes <- AQS_API_classes() %>% expect_s3_class(class="AQS_API")
pbc <- AQS_API_parametersByClass(class = "CRITERIA") %>% expect_s3_class(class="AQS_API")
mas <- AQS_API_monitoringagencies() %>% expect_s3_class(class="AQS_API")
PQAOs <- AQS_API_PQAO() %>% expect_s3_class(class="AQS_API")
fbs <- AQS_API_fieldByService(service = "sampleData") %>% expect_s3_class(class="AQS_API")
mbs <- AQS_API_monitorsbysite(parameter = "44201",
                              bdate = ymd("2019-01-01"),
                              edate = mdy("03-31-2019"),
                              stateFIPS = "42",
                              countycode = "003",
                              sitenum = "0008"
							  ) %>%
							  expect_s3_class(class="AQS_API")

mbc <- AQS_API_monitorsbycounty(parameter = "44201",
                                bdate = ymd("2019-01-01"),
                                edate = mdy("03-31-2019"),
                                stateFIPS = "42",
                                countycode = "003"
								) %>%
								expect_s3_class(class="AQS_API")

mbstate <- AQS_API_monitorsbystate(parameter = "44201",
                               bdate = ymd("2019-01-01"),
                               edate = mdy("03-31-2019"),
                               stateFIPS = "42"
                               ) %>%
							   expect_s3_class(class="AQS_API")
}

context("ensuring that code properly check for invalid input")
test_that("checking invalid input", {
pby <- AQS_API_parametersByClass(class = "taco") %>% expect_null
counties <- AQS_API_countiesByState(stateFIPS = "ZZ9") %>% expect_null
sites <- AQS_API_sitesByCounty(stateFIPS = "42", countycode = "9999") %>% expect_null

}